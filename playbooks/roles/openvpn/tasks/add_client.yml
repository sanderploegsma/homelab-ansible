---
- name: Ensure client-configs exists
  ansible.builtin.file:
    path: "{{ openvpn_path_clients }}"
    state: directory
    mode: "0700"

- name: "Check Client cert already exists: {{ openvpn_client }}"
  ansible.builtin.stat:
    path: "{{ openvpn_path }}/pki/issued/{{ openvpn_client }}.crt"
  register: client_crt_exists

# - name: "Check Client cert already exists: {{ openvpn_client }}"
#   community.crypto.x509_certificate_info:
#     path: "{{ openvpn_path }}/pki/issued/{{ openvpn_client }}.crt"
#     valid_at:
#       next_day: "+1d"
#   register: client_crt_info
#   when: client_crt_exists.stat.exists

- name: "Create client cert: {{ openvpn_client }}"
  when: not client_crt_exists.stat.exists # or not client_crt_info.valid_at.next_day
  block:
    - name: "Create client key and CSR: {{ openvpn_client }}"
      ansible.builtin.command: "{{ openvpn_path_easyrsa }}/easyrsa gen-req {{ openvpn_client }} nopass"
      args:
        chdir: "{{ openvpn_path }}"
        creates: "{{ openvpn_path }}/pki/reqs/{{ openvpn_client }}.req"
      environment:
        EASYRSA_CERT_EXPIRE: "{{ openvpn_client_cert_expires }}"
        EASYRSA_DN: "cn_only"
        EASYRSA_KEY_SIZE: "4096"
        EASYRSA_ALGO: "ec"
        EASYRSA_DIGEST: "sha512"
        EASYRSA_BATCH: "yes"
        EASYRSA_REQ_CN: "{{ openvpn_client }}"
        EASYRSA_REQ_COUNTRY: "{{ openvpn_key_country }}"
        EASYRSA_REQ_ORG: "{{ openvpn_key_org }}"
        EASYRSA_REQ_OU: "{{ openvpn_key_ou }}"

    - name: "Sign client CSR: {{ openvpn_client }}"
      ansible.builtin.command: "{{ openvpn_path_easyrsa }}/easyrsa sign-req client {{ openvpn_client }}"
      args:
        chdir: "{{ openvpn_path }}"
        creates: "{{ openvpn_path }}/pki/issued/{{ openvpn_client }}.crt"
      environment:
        EASYRSA_BATCH: "yes"

- name: Capture CA contents
  ansible.builtin.command: cat {{ openvpn_path }}/pki/ca.crt
  no_log: true
  register: openvpn_ca_contents
  changed_when: false

- name: Capture TA contents
  ansible.builtin.command: cat {{ openvpn_path }}/pki/ta.key
  no_log: true
  register: openvpn_ta_contents
  changed_when: false

- name: Capture client cert contents
  ansible.builtin.command: cat {{ openvpn_path }}/pki/issued/{{ openvpn_client }}.crt
  no_log: true
  register: openvpn_client_cert_contents
  changed_when: false

- name: Capture client key contents
  ansible.builtin.command: cat {{ openvpn_path }}/pki/private/{{ openvpn_client }}.key
  no_log: true
  register: openvpn_client_key_contents
  changed_when: false

- name: "Create openvpn client file: {{ openvpn_client }}"
  ansible.builtin.template:
    src: client.ovpn.j2
    dest: "{{ openvpn_path_clients }}/{{ openvpn_client }}.ovpn"
    mode: "0400"
  no_log: true

- name: "Fetch openvpn client file: {{ openvpn_client }}"
  ansible.builtin.fetch:
    src: "{{ openvpn_path_clients }}/{{ openvpn_client }}.ovpn"
    dest: "{{ openvpn_path_clients_local }}/"
    flat: true
